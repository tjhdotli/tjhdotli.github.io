program Project1;

{$APPTYPE CONSOLE}

{$R *.res}

uses
  System.SysUtils;

// Rekursive Fakultätsfunktion mit Int64
function FakultaetRekursiv(n: Integer): Int64; //Auch wieder Int64 wegen hohen Zahlen
begin
  if n <= 1 then  //Wenn n kleiner oder gleich 1 ist, ist die Fakultät 1
    Result := 1
  else
    Result := n * FakultaetRekursiv(n - 1); // Sonst n mal Fakultät von n - 1 bis n = 1
end;

// Iterative Fakultätsfunktion mit Int64
function FakultaetIterativ(n: Integer): Int64;   //Int64 da hohe Zahlen
var
  i: Integer;
  erg: Int64;
begin
  erg := 1; //Anfangswert 1, weil 1 das neutrale Element der Multiplikation ist
  for i := 2 to n do //Schleife von 2 bis n (1 brauch man nicht weil erg=1)
    erg := erg * i; //Multipliziere erg immer mit der nächsten Zahl.
  Result := erg; //Ergebnis zurückgeben
end;

var
  n, auswahl: Integer;
  erg: Int64;
begin
  try
    Writeln('Fakultaet-Berechnung (bis max. 20)');
    Writeln('----------------------------------');
    Writeln('1 = Rekursiv');
    Writeln('2 = Iterativ');
    Write('Auswahl: ');
    ReadLn(auswahl);

    Write('Gib eine natürliche Zahl ein (bis 20): ');
    ReadLn(n);

    if (n < 0) or (n > 20) then
      Writeln('Zu großer Wert.')
    else
    begin
      case auswahl of
        1: erg := FakultaetRekursiv(n);
        2: erg := FakultaetIterativ(n);
      else
        Writeln('Ungültige Auswahl.');
        Exit;
      end;

      Writeln;
      if auswahl = 1 then
        Writeln('Rekursiv:')
      else
        Writeln('Iterativ:');

      Writeln(n, '! = ', erg);
    end;

  except
    on E: Exception do
      Writeln(E.ClassName, ': ', E.Message);
  end;

  ReadLn;
end.
